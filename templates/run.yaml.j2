---
- {{ project }}-jobs: &{{ project }}-jobs
    name: '{{ project }}-jobs'
    current-parameters: true

- {{ project }}-params: &{{ project }}-params
    name: '{{ project }}-params'
    repo: '{{ repo }}'
    port:{% if dport %} {{ dport }}
{% else %}{{ None }}
{% endif %}
    tag:
{% if docker_tags %}
{% for tag in docker_tags %}
{% for key, value in tag.iteritems() %}
      - {{ key }}:
          branch: {{ value.branch }}
{% endfor %}
{% endfor %}

{% else %}
      - latest:
          branch: master
{% endif %}
{% if slave %}
- parameter:
    name: {{ project }}-slave
    parameters:
      - label:
          name: slave
          default: {{ slave }}
{% endif %}

- parameter:
    name: {{ project }}-branch
    parameters:
      - string:
          name: branch
          default: 'stable/gambia'

- {{ project }}-containers: &{{ project }}-containers
    name: '{{ project }}-containers'
    repo: '{repo}'
    port: '{port}'
    container: '{container}'
    tag: '{tag}'

- {{ project }}-run-containers: &{{ project }}-run-containers
    name: '{{ project }}-build-containers'
    <<: *{{ project }}-containers
    test: '{test}'

- {{ project }}-build-containers: &{{ project }}-build-containers
    name: '{{ project }}-build-containers'
    <<: *{{ project }}-containers
    ref_arg: '{ref_arg}'
    path: '{path}'

- builder:
    name: {{ project }}-pull-containers
    builders:
      - shell: |
          set +x
          if [ "{repo}" = "_" ]; then
            image={container}:{tag}
          elif [ "{port}" = "None" ]; then
            image={repo}/{container}:{tag}
          else
            image={repo}:{port}/{container}:{tag}
          fi
          {{ sudo1 }}docker pull $image

- builder:
    name: {{ project }}-build-containers
    builders:
      - shell: |
          set +x
          if [ "{repo}" = "_" ]; then
            image={container}:{tag}
          elif [ "{port}" = "None" ]; then
            image={repo}/{container}:{tag}
          else
            image={repo}:{port}/{container}:{tag}
          fi
          if [ "{ref_arg}" = "None" ]; then
            build_arg=""
          else
            build_arg="--build-arg {ref_arg}={ref}"
          fi
          cd {path}
          {{ sudo1 }}docker build $build_arg \
            --pull=false --no-cache --force-rm=true \
            -t $image .

- builder:
    name: {{ project }}-run-containers
    builders:
      - shell: |
          set +ex
          [ ! -z "$WORKSPACE" ] && {{sudo1 }}rm -rf $WORKSPACE/* || true
          if [ "{repo}" = "_" ]; then
            image={container}:{tag}
          elif [ "{port}" = "None" ]; then
            image={repo}/{container}:{tag}
          else
            image={repo}:{port}/{container}:{tag}
          fi
          {{ sudo1 }}docker run --rm \
{% if use_testapi %}
            --link testapi:testapi \
            -e TEST_DB_URL=http://testapi:8000/api/v1/results \
            -e NODE_NAME={{ project }} \
{% endif %}
            -v {{ jenkins_workspace}}/$JOB_NAME/results:/var/lib/xtesting/results \
{% for key, value in docker_args.env.iteritems() %}
            -e {{ key }}={{ value }} \
{% endfor %}
{% for volume in docker_args.volumes %}
            -v {{ volume }} \
{% endfor %}
            $image /bin/bash -c '{% for command in docker_args.commands %}{{ command }} && {% endfor %}run_tests -t {test}{% if publish["db"] is sameas true %} -r'
{% else %}

{% endif %}
          res=$?
          {{ publish["cmd"] }} $WORKSPACE/ \
            {{ publish["repo"] }}/$JOB_NAME-$BUILD_ID > /dev/null 2>&1
          find $WORKSPACE -type f \
            -printf \
            "{{ publish["www"] }}/$JOB_NAME-$BUILD_ID/%P\n"
          exit $res

{% if gerrit %}
- scm:
    name: {{ project }}-scm
    scm:
      - git:
          url: https://{{ gerrit }}/gerrit/{{ gerrit_project }}
          refspec: '+refs/changes/*:refs/changes/*'
          branches:
            - '{ref}'
{% endif %}

- job-template:
    name: '{{ project }}-{repo}-{container}-{tag}-pull'
    parameters:
{% if slave %}
      - {{ project }}-slave
{% endif %}
    builders:
      - {{ project }}-pull-containers:
          <<: *{{ project }}-containers

{% for suite in suites %}
- project:
    name: '{{ project }}-{{ repo }}-{{ suite.container }}-pull'
    <<: *{{ project }}-params
    container: '{{ suite.container }}'
    jobs:
      - '{{ project }}-{repo}-{container}-{tag}-pull'

{% endfor %}

- job-template:
    name: '{{ project }}-{repo}-{container}-{tag}-{test}-run'
    parameters:
{% if slave %}
      - {{ project }}-slave
{% endif %}
    builders:
      - {{ project }}-run-containers:
          <<: *{{ project }}-run-containers

{% for suite in suites %}
- project:
    name: '{{ project }}-{{ repo }}-{{ suite.container }}'
    <<: *{{ project }}-params
    container: '{{ suite.container }}'
    test:
{% for test in suite.tests %}
      - {{ test }}
{% endfor %}
    jobs:
      - '{{ project }}-{repo}-{container}-{tag}-{test}-run'

{% endfor %}

{% if gerrit %}
- job-template:
    name: '{{ project }}-{repo}-{container}-{tag}-check'
    parameters:
{% if slave %}
      - {{ project }}-slave
{% endif %}
      - {{ project }}-branch:
          branch: '{branch}'
    scm:
      - {{ project }}-scm:
          ref: $branch
    builders:
      - {{ project }}-build-containers:
          <<: *{{ project }}-build-containers
          ref: $branch

{% for dep in builds.dependencies %}

- project:
    name: '{{ project }}-{{ dep.repo }}-{{ dep.container }}-{{ dep.tag }}-pull'
    repo:{% if dep.repo %} {{ dep.repo }}
{% else %}{{ None }}
{% endif %}
    port:{% if dep.dport %} {{ dep.dport }}
{% else %}{{ None }}
{% endif %}
    container: {{ dep.container }}
    tag: {{ dep.tag }}
    jobs:
      - '{{ project }}-{repo}-{container}-{tag}-pull'

{% endfor %}

{% for step in builds.steps %}
{% for container in step.containers %}
- project:
    name: {{ project }}-{{ repo }}-{{ container.name }}-{tag}-build
    <<: *{{ project }}-params
    container: {{ container.name }}
    ref_arg:{% if container.ref_arg %} {{ container.ref_arg }}
{% else %}{{ None }}
{% endif %}
    path: {{ container.path }}
    jobs:
      - '{{ project }}-{repo}-{container}-{tag}-check'

{% endfor %}
{% endfor %}

- job-template:
    name: '{{ project }}-{tag}-all-check'
    project-type: multijob
    parameters:
{% if slave %}
      - {{ project }}-slave
{% endif %}
      - {{ project }}-branch:
          branch: '{branch}'
    properties:
      - build-blocker:
          use-build-blocker: true
          {{ block_level_key }}: 'NODE'
          blocking-jobs:
            - '^{{ project }}-[a-z]+-(check)$'
    builders:
{% for suite in suites %}
      - multijob:
          name: {{ repo }}/{{ suite.container }}:{tag}
          projects:
{% for test in suite.tests %}
            - name: '{{ project }}-{{ repo }}-{{ suite.container }}-{tag}-{{ test }}-run'
              <<: *{{ project }}-jobs
{% endfor %}
{% endfor %}


{% for suite in suites %}
- job-template:
    name: '{{ suite.container }}-{tag}-check'
    project-type: multijob
    parameters:
{% if slave %}
      - {{ project }}-slave
{% endif %}
      - {{ project }}-branch:
          branch: '{branch}'
    properties:
      - build-blocker:
          use-build-blocker: true
          {{ block_level_key }}: 'NODE'
          blocking-jobs:
            - '^{{ project }}-[a-z]+-(check)$'
    builders:
      - multijob:
          name: {{ repo }}/{{ suite.container }}:{tag}
          projects:
{% for test in suite.tests %}
            - name: '{{ project }}-{{ repo }}-{{ suite.container }}-{tag}-{{ test }}-run'
              <<: *{{ project }}-jobs
{% endfor %}
{% endfor %}

- trigger:
    name: {{ project }}-patchset-created
    triggers:
      - gerrit:
          server-name: '{{ gerrit }}'
          trigger-on:
            - patchset-created-event
            - comment-added-contains-event:
                comment-contains-value: 'recheck'
            - comment-added-contains-event:
                comment-contains-value: 'reverify'
          projects:
            - project-compare-type: 'ANT'
              project-pattern: '{{ gerrit_project }}'
              branches:
                - branch-compare-type: 'ANT'
                  branch-pattern: '**/{branch}'
          skip-vote:
            successful: false
            failed: false
            unstable: false
            notbuilt: false
{% endif %}

- project:
    name: '{{ project }}-all'
    <<: *{{ project }}-params
    jobs:
{% if gerrit %}
    - '{{ project }}-{tag}-all-check'
{% endif %}

- project:
    name: '{{ project }}'
    <<: *{{ project }}-params
    jobs:
{% if gerrit %}
{% for suite in suites %}
      - '{{ suite.container }}-{tag}-check'
{% endfor %}
{% endif %}

- view:
    name: {{ project }}
    view-type: list
    columns:
      - status
      - weather
      - job
      - last-success
      - last-failure
      - last-duration
    regex: ^{{ project }}-[a-z]+-(check)$
